#! /bin/sh
#
# Author: R. Jakobi
#
# Modifications: 19/05/93 J. Werner	SYSTEST support
#                01/06/93 jw	        Option -f (force)
#                10/12/93 jw		read mpscftab
#                17/01/94 jw		read TEX_INPUTS from mpscftab(cfcode=1)
#		21-JAN-1994 tf		useable for gmd_sp, too (symbolic link)
#		02-MAR-1994 tf          logging of start parameters
#		18-JUL-1994 rj		use 'printcfg' instead of 'sqltalk'
#		18-AUG-1994 rj		name of RTX-Database is not longer
#                                       needed as environment variable
#               28-NOV-1994 ixa         BSCS V 3.0 -environment variable with
#		            		Server Name, TCPort and Message Queue 
#               08-JUL-1998 jk          Default starting db changed to BSCSDB
#               15-MAR-2001 jk          Added new env. vars for DATA
#               06-SEP-2002 mj          if BSCS_WORKDIR, DATA_SERVER_WORKDIR,
#                                       DATA_SERVER_WORKDIR are already set
#                                       do not reset them from database

trap 'rm -f /tmp/$$.*' 0  1 2 3 15

LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/ucblib
export LD_LIBRARY_PATH

TMP_RUN=/tmp/$$.run
TMP_SCR=/tmp/$$.scr
TMP_OUT=/tmp/$$.out
TMP_LOG=/tmp/start_sp.log

START_PROG=`basename $0`

case "$START_PROG" in
	start_sp)		SP_PROG=sp
					;;
	*)				>&2 echo  Error: invalid link to start_sp.
					exit 1
					;;
esac



case "$1" in
       "")	if [ "$BSCSDB" = "" ] ; then 
		    >&2 echo  USAGE: start_sp [database]
		    >&2 echo  Call start_sp either with the db as agrument 
		    >&2 echo  or set the environment variable BSCSDB.
		    >&2	echo  If both are set the command line argument
 		    >&2 echo  will be taken as database.
		    exit 1
		    fi
		;;
 	*)	BSCSDB=$1
	  	;;
esac

export BSCSDB 

echo "Datab.: " $BSCSDB

if [ "$BSCS_BINDIR" = "" ]; then
  BSCS_BINDIR=`printcfg 14`
fi

if [ "$BSCS_WORKDIR" = "" ]; then
  BSCS_WORKDIR=`printcfg 17`
fi

if [ "$DATA_SERVER_WORKDIR" = "" ]; then
  DATA_SERVER_WORKDIR=`printcfg 17`
fi

if [ "$DATA_SERVER_ADDRESS" = "" ]; then
 DATA_SERVER_ADDRESS=`printcfg 80`
fi

DATA_SERVER_STOPPED_PROFILES=`printcfg H DXL_PROFILE INIT_STATUS_IND DXL_PROFILE_ID`

# obsolete TEXDIR=`printcfg 1`

BSCS_VAR=`printcfg 5002` 

PATH=/bin:/usr/bin:/usr/ucb:/usr/local/bin:/TEX/bin:/TEX/bin/sun4:$BSCS_BINDIR
# obsolete TEX_INPUTS="$TEXDIR:/TEX/inputs"

if  [ "$BSCS_VAR" != "" ]; then
	BSCS_SERV=`echo $BSCS_VAR | awk -F'|' '{print $1}'`
	echo "Server: " $BSCS_SERV

	BSCS_PORT=`echo $BSCS_VAR | awk -F'|' '{print $2}'`
	echo "TCPort: " $BSCS_PORT

	BSCS_QUE=`echo $BSCS_VAR | awk -F'|' '{print $3}'`
	echo "MSG-Queue: " $BSCS_QUE

	export PATH BSCSDB RTXDB BSCS_SERV BSCS_PORT BSCS_QUE DATA_SERVER_WORKDIR DATA_SERVER_ADDRESS DATA_SERVER_STOPPED_PROFILES;
else
	export PATH BSCSDB RTXDB DATA_SERVER_WORKDIR DATA_SERVER_ADDRESS DATA_SERVER_STOPPED_PROFILES; 
fi

#---------------------------------------------------------------------
# Loggging of start parameters with date/time

echo "Process:   " $SP_PROG >>$TMP_LOG
echo "Date:      " `date`  >>$TMP_LOG
echo "Database:  " $BSCSDB >>$TMP_LOG
echo "----------------------------------------" >>$TMP_LOG

#---------------------------------------------------------------------

case "$START_PROG" in

	*) 		eval $SP_PROG "$BSCS_BINDIR/" "$BSCS_WORKDIR/"
	  				;;
esac

sleep 3



















