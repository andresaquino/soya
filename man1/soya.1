.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "SOYA 1"
.TH SOYA 1 "2009-07-09" "1.7" "SOYA: A SOI Applications Manager"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\& soya \- start or stop soi platform applications
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& soya
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 3
\& Soya se puede usar  para  iniciar  cualquier proceso via el comando screen,
\& es un metascript que indicando los comandos en un archivo de configuracion,
\& facilita la ejecucion de determinados comandos.
\&
\& Utiliza un directorio de configuracion, donde se almacenan los siguientes
\& archivos:
\&  * monopse.sh
\&    Aplicacion principal
\&
\&  * monopse.conf
\&    Configuracion de parametros generales a la aplicacion
\&
\&  * [dominio]\-monopse.conf
\&    Configuracion para un dominio en particular, vease dominios.
\&
\&  * monopse.log
\&    Log de ejecucion
.Ve
.PP
\&\s-1DOMINIOS\s0
 El archivo para configurar un dominio en particular tiene los
 siguientes parametros posibles:
.PP
.Vb 2
\& Para indicar cual es el shell que inicia la aplicacion
\& STARTAPP=[bin/start\-app.sh]
\& 
\& Para indicar cual es el shell que detiene la aplicacion
\& STOPAPP=[stop\-app.sh]
\& 
\& Si es necesario ejecutar un shell antes de iniciar la aplicacion
\& PREEXECUTION=[bin/before\-start.sh]
\& 
\& La ruta del dominio
\& PATHAPP=[path/to/app/or/domain]
\& 
\& Claves para filtrar la ejecucion de la aplicacion
\& FILTERAPP=["domainUp=1"]
\& 
\& FILTERLANG=["perl"]
\& 
\& En caso de que se manejen dominios administrados, indicar con que
\& aplicacion se inicia el administrador y cual es la Clave para filtrar
\& el proceso
\& WLSAPP=[bin/app\-manager.sh]
\& 
\& FILTERWL=["app=manager"]
\& 
\& Si se quiere indicar que no se genere un archivo con el stderr, o se
\& concentre toda la salida en unico archivo de bitacora
\& UNIQUELOG=[true|false]
\& 
\& Clave para verificar si la aplicacion se encuentra en ejecucion, se
\& buscara en el archivo de bitacora
\& UPSTRING=["Startup Success"]
\& 
\& Clave para verificar que la aplicacion ya no se encuentra en ejecucion,
\& se buscara en el archivo de bitacora y posteriormente el PID del proceso
\& DOWNSTRING=["thanks for using monopse"]
\& 
\& Tiempo de espera antes de verificar si se encuentra en ejecucion o no
\& la aplicacion
\& TOSLEEP=[0\-99]
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\& Para usar monopse es necesario tener configurado al menos un dominio, supongamos
\& el super proyecto NOE:
\&
\& * para iniciar NOE
\&   $ ~/bin/monopse \-\-application=wliNOEdes \-\-start
\& 
\& * con opciones cortas
\&   $ ~/bin/monopse \-a=wliNOEdes start
\&
\& * de plano si ya es muy grande la hueva (TIP)
\&   $ alias noedes=\*(Aq~/bin/monopse \-a=wliNOEdes\*(Aq
\&        $ noedes start
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\& soya written by Andres Aquino and Nextel Friends.
.Ve
.SH "BUGS"
.IX Header "BUGS"
.Vb 1
\& Report bugs to <andres.aquino@gmail.com>
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\& Copyright Â© 2008 Nextel de Mexico S.A. de C.V.
.Ve
